JSF
converter="estadoConverter"
converter="cidadeConverter"
<h:selectOneMenu value="#{pessoaBean.pessoa.estados}" immediate="true" 

CLASSE ESTADO CONVERTER

package br.com.converter;

import java.io.Serializable;

import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.convert.Converter;
import javax.faces.convert.FacesConverter;
import javax.persistence.EntityManager;
import javax.persistence.EntityTransaction;

import br.com.entidades.Estados;
import br.com.jpautil.JPAUtil;

@FacesConverter(forClass = Estados.class, value = "estadoConverter")
public class EstadoConverter implements Converter, Serializable {

	private static final long serialVersionUID = 1L;

	//Retorna objeto inteiro
	//Faces Context, recebe a parte de contexto do JSF
	//UIComponent - componentes do JSF que estão sendo usado - exemplo: h:selectOneMenu
	//codigoEstado - retorna o objeto inteiro
	@Override
	public Object getAsObject(FacesContext context, UIComponent component, 
			String codigoEstado) {

		EntityManager entityManager = JPAUtil.getEntityManager();
		EntityTransaction entityTransaction = entityManager.getTransaction();
		entityTransaction.begin();

		Estados estados = entityManager.
				find(Estados.class, Long.parseLong(codigoEstado));

		return estados;
	}

	//estado  -Retorna códogo em String
	@Override
	public String getAsString(FacesContext context, UIComponent component, 
			Object estado) {
		
		if(estado == null) {
			
			return null;
		}
		// se o estado for uma instância do objeto Estado
		if(estado instanceof Estados) {
			return ((Estados) estado).getId().toString();
		}
		else {
			return estado.toString();
		}
		
		
	}

}


CLASSE CIDADE CONVERTER
  package br.com.converter;

import java.io.Serializable;

import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.convert.Converter;
import javax.faces.convert.FacesConverter;
import javax.persistence.EntityManager;
import javax.persistence.EntityTransaction;

import br.com.entidades.Cidades;
import br.com.entidades.Estados;
import br.com.jpautil.JPAUtil;

@FacesConverter(forClass = Cidades.class, value = "cidadeConverter")
public class CidadesConverter implements Converter, Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	//Retorna obljeto inteiro
	@Override
	public Object getAsObject(FacesContext context, UIComponent component, 
			String codigoCidade) {
		EntityManager entityManager = JPAUtil.getEntityManager();
		EntityTransaction entityTransaction = entityManager.getTransaction();
		entityTransaction.begin();
		
		Cidades cidades = (Cidades) entityManager.
				find(Cidades.class, Long.parseLong(codigoCidade));
		
		return cidades;
	}

	//Retorna String
	@Override
	public String getAsString(FacesContext context, UIComponent component, 
			Object cidade) {
		
			if(cidade == null) {
			
				return null;
			}
		
			if(cidade instanceof Cidades) {
				return ((Cidades) cidade).getId().toString();
			}
			else {
				return cidade.toString();
			}
		
		
	}

}
colocado a imagem dentro do comand link para download da foto dentro da primeirapagina.xhtml
<h:commandLink actionListener="#{pessoaBean.download}">
actionListener vai até o servidor e volta
<h:commandLink  actionListener="#{pessoaBean.download}">
				<h:graphicImage widh="60" height="60" value="#{pessoa.fotoIconBase64}" />
				Tem que mandar um parametro para resgatar a foto
				nome
				<f:param name="fileDownloadId" value="#{pessoa.id}"/>
				</h:commandLink>
				

PERSISTENCE.XML
<!-- mínimo de conexões ou portas disponíveis, no caso 5 portas 06/09/2023 Mod27.49 -->
			<property name="hibernate.c3p0.min_size" value="5" />
			
			<!-- máximo de conexões ou portas disponíveis, no 100 portas 06/09/2023 Mod27.49-->
			<property name="hibernate.c3p0.max_size" value="100" />
			
			<!-- o números de segundos no value, em que uma conexão inativa é mantida no pool 06/09/2023 Mod27.49-->
			<property name="hibernate.c3p0.timeout" value="300" />
			
			<!-- Número total de instruções, transações no BD e mantidas em cache  06/09/2023 Mod27.49-->
			<property name="hibernate.c3p0.max_statements" value="50" />
			
			<!-- Tempo ocioso em segundos antes de uma conexão ser validada automáticamente 06/09/2023 Mod27.49-->
			<property name="hibernate.c3p0.idle_test_period" value="120" />

COMO ALTERAR TABELA PARA DELETE ON CASCADE
ALTER TABLE lancamento
DROP CONSTRAINT usuario_fk;

ALTER TABLE lancamento
ADD CONSTRAINT usuario_fk
FOREIGN KEY (usuario_id) REFERENCES pessoa(id)
ON DELETE CASCADE;